{"Name":"HockeyApp for iOS","Id":2732,"Alias":"hockeyappios","Description":"HockeyApp is a platform to collect live crash reports, get feedback from your users, distribute your betas, recruit new testers, and analyze your test coverage.\n\nThe following features are currently supported:\n\n - **Collect crash reports:** If your app crashes, a crash log is written to the device\u0027s storage. If the user starts the app again, they will be asked asked to submit the crash report to HockeyApp. This works for both beta and live apps, i.e. those submitted to the App Store. Crash logs contain viable information for you to help resolve the issue. Furthermore, you as a developer can add additional information to the report as well.\n\n - **Update Ad-Hoc / Enterprise apps:** The app will check with HockeyApp if a new version for your Ad-Hoc or Enterprise build is available. If yes, it will show an alert view to the user and let him see the release notes, the version history and start the installation process right away.\n\n - **Update notification for app store:** If an update is available for your app on the app store, an alert can be displayed to the user to allow them to navigate to the listing for the update on the app store (Disabled by default).\n \n - **Feedback:** Besides crash reports, collecting feedback from your users from within your app is a great option to help with improving your app. You act on and answer feedback directly from the HockeyApp backend.\n\n - **Authenticate:** To help you stay in control of closed tester groups, you can identify and authenticate users against your registered testers with the HockeyApp backend. The authentication feature supports several ways of authentication.\n \n\n## Learn More\nLearn more about HockeyApp by visiting http://hockeyapp.net","Version":"4.1.0","Summary":"HockeyApp is a platform to collect live crash reports, get feedback from your users, distribute your betas, recruit new testers, and analyze your test coverage.","QuickStart":"## Obtain an App Identifier\n\nPlease see the [How to create a new app](http://support.hockeyapp.net/kb/about-general-faq/how-to-create-a-new-app) tutorial. This will provide you with a HockeyApp specific App Identifier to be used to initialize the SDK.\n\n## Add crash reporting\n\nThis will add crash reporting capabilities to your app. \n\nOpen your AppDelegate.cs file, and add the following lines:\n\n```csharp\nusing HockeySDK;\n\nnamespace YourNameSpace\n{\n\t[Register(\"AppDelegate\")]\n\tpublic partial class AppDelegate : UIApplicationDelegate\n\t{\n\t\tpublic override bool FinishedLaunching(UIApplication application, NSDictionary launchOptions)\n\t\t{\n\t\t\tvar manager = BITHockeyManager.SharedHockeyManager;\n\t\t\tmanager.Configure(\"Your_App_Id\");\n\t\t\tmanager.StartManager();\n\t\t}\n\t}\n}\n```\n\n\n## Add Update Distribution\n\nThis will add the in-app update mechanism to your app.\n\nThe feature handles version updates, presents update and version information in an App Store like user interface, collects usage information and provides additional authorization options when using Ad-Hoc provisioning profiles.\n\nThis module automatically disables itself when running in an App Store build by default!\n\nThis feature can be disabled manually as follows:\n\n```csharp\nvar manager = BITHockeyManagerSharedHockeyManager;\nmanager.Configure(\"Your_App_Id\");\nmanager.SetDisableUpdateManager = true;\nmanager.StartManager();\n```\n\nIf you want to see beta analytics, use the beta distribution feature with in-app updates, restrict versions to specific users, or want to know who is actually testing your app, you need to follow the instructions on our guide [Authenticating Users on iOS](https://support.hockeyapp.net/kb/client-integration-ios-mac-os-x-tvos/authenticating-users-on-ios)\n\n\n\n\n## Add in-app feedback\n\nThis will add the ability for your users to provide feedback from right inside your app.\n\n```csharp\nvar feedbackManager = BITHockeyManager.SharedHockeyManager.FeedbackManager;\n\n// Show current feedback\nfeedbackManager.ShowFeedbackListView();\n\n// Send new feedback\nfeedbackManager.ShowFeedbackComposeView();\n```\n\n\n\n## Add authentication\n\nInstructions for iOS Authentication can be found [here](https://support.hockeyapp.net/kb/client-integration-ios-mac-os-x-tvos/authenticating-users-on-ios)\n\n\n\n## Control logging output\n\nYou can control the amount of log messages from HockeySDK.  By default, we keep the noise as low as possible, only errors will show up. To enable additional logging, i.e. while debugging, add the following line of code:\n\n```csharp\nvar manager = BITHockeyManager.SharedHockeyManager;\nmanager.Configure(\"Your_App_Id\");\nmanager.SetDebugLogEnabled = true;\nmanager.StartManager();\n```\n\n\n## More Information\n\nFor more information, see the [HockeySDK for Xamarin Source Repository](https://github.com/bitstadium/HockeySDK-Xamarin)\n","Hash":"691839a15c354f6509cfa1508b21f0db","TargetPlatforms":["ios"],"TrialHash":null}