{"Name":"Flurry Ads (Yahoo App Publishing)","Id":2240,"Alias":"Flurry.Ads","Description":"Yahoo App Publishing provides a flexible ad-serving platform that is easy to set \r\nup and use, enabling you to maximize your ad revenue and engage actively with \r\nyour users. As a Publisher, you can drive revenue by creating banners, \r\ninterstitials, native and video ads for your app.\r\n\r\n## Get your API Keys\r\n\r\nStart by creating an app. Once you create the app, you’ll receive a Flurry API \r\nKey, which you’ll need when using the SDK. \r\n\r\n[**Sign Up**][1] or [**Create an App**][2]\r\n\r\n## Integrate Flurry Analytics\r\n\r\nWe have example code below to get you up and running as quickly as possible.\r\n\r\n### iOS \r\n\r\n    [Register(\"AppDelegate\")]\r\n    public partial class AppDelegate : UIApplicationDelegate\r\n    {\r\n        public override bool FinishedLaunching(UIApplication application, NSDictionary launchOptions)\r\n        {\r\n            // start Flurry\r\n            FlurryAgent.StartSession(\"FLURRY_API_KEY\");\r\n\r\n            // continue . . .\r\n        }\r\n    }\r\n\r\n### Android\r\n\r\n    [Application]\r\n    public class SampleApplication : Application\r\n    {\r\n        public SampleApplication(IntPtr javaReference, JniHandleOwnership transfer)\r\n            : base(javaReference, transfer)\r\n        {\r\n        }\r\n\r\n        public override void OnCreate()\r\n        {\r\n            base.OnCreate();\r\n            \r\n            // start Flurry\r\n            FlurryAgent.Init(this, \"FLURRY_API_KEY\");\r\n            \r\n            // continue . . .\r\n        }\r\n    }\r\n\r\n## Configure Ad Serving\r\n\r\nConfiguring ad serving is quick. After you [create an ad space][3], integrate \r\nthe Flurry ads (step 5) into your app. For additional help with creating an ad \r\nspace, check this [documentation][4]. \r\n\r\n[**Create an Ad Space**][3]\r\n\r\n## Integrate Flurry Ads\r\n\r\nNow, integrate the Ad Space code into your app and start earning revenue. \r\n\r\n### iOS \r\n\r\n    // create the ad instance\r\n    var adBanner = new FlurryAdBanner(\"AD_SPACE_NAME);\r\n    adBanner.DidFetchAd += delegate {\r\n        // display the ad\r\n        adBanner.DisplayAd(View, this);\r\n    };\r\n    \r\n    // fetch the ad\r\n    adBanner.FetchAd(View.Frame);   \r\n\r\n### Android\r\n\r\n    // create the ad instance\r\n    var adBanner = new FlurryAdBanner(this, bannerContainerView, \"AD_SPACE_NAME\");\r\n    adBanner.Fetched += delegate {\r\n        // display the ad\r\n        adBanner.DisplayAd();\r\n    };\r\n    \r\n    // fetch the ad\r\n    adBanner.FetchAd();\r\n\r\nBesides the basic banner ad, we can include other ad types, one such type is the \r\ninterstitial ad.\r\n\r\n### iOS\r\n\r\n    // create the ad instance\r\n    var adInterstitial = new FlurryAdInterstitial(\"AD_SPACE_NAME\");\r\n    adInterstitial.DidFetchAd += delegate {\r\n        // display the ad\r\n        adInterstitial.Present(this);\r\n    };\r\n    \r\n    // fetch the ad\r\n    adInterstitial.FetchAd();\r\n     \r\n### Android\r\n\r\n    // create the ad instance\r\n    var adInterstitial = new FlurryAdInterstitial(this, \"AD_SPACE_NAME\");\r\n    adInterstitial.Fetched += delegate {\r\n        // display the ad\r\n        adInterstitial.DisplayAd();\r\n    };\r\n    \r\n    // fetch the ad\r\n    adInterstitial.FetchAd();\r\n            \r\n[1]: https://dev.flurry.com/secure/signup.do\r\n[2]: https://dev.flurry.com/createProjectSelectPlatform.do\r\n[3]: https://dev.flurry.com/appSpotSignup.do\r\n[4]: https://developer.yahoo.com/flurry/docs/publisher/gettingstarted/basicadspacesetup/\r\n","Version":"2.0.0","Summary":"Yahoo App Publishing provides a flexible ad-serving platform that is easy to set up and use, enabling you to maximize your ad revenue.","QuickStart":"Yahoo App Publishing provides a flexible ad-serving platform that is easy to set \r\nup and use, enabling you to maximize your ad revenue and engage actively with \r\nyour users. As a Publisher, you can drive revenue by creating banners, \r\ninterstitials, native and video ads for your app.\r\n\r\n## Get your API Keys\r\n\r\nStart by creating an app. Once you create the app, you’ll receive a Flurry API \r\nKey, which you’ll need when using the SDK. \r\n\r\n[**Sign Up**][1] or [**Create an App**][2]\r\n\r\n## Integrate Flurry Analytics\r\n\r\nWe have example code below to get you up and running as quickly as possible.\r\n\r\n### iOS \r\n\r\n    [Register(\"AppDelegate\")]\r\n    public partial class AppDelegate : UIApplicationDelegate\r\n    {\r\n        public override bool FinishedLaunching(UIApplication application, NSDictionary launchOptions)\r\n        {\r\n            // start Flurry\r\n            FlurryAgent.StartSession(\"FLURRY_API_KEY\");\r\n\r\n            // continue . . .\r\n        }\r\n    }\r\n\r\n### Android\r\n\r\n    [Application]\r\n    public class SampleApplication : Application\r\n    {\r\n        public SampleApplication(IntPtr javaReference, JniHandleOwnership transfer)\r\n            : base(javaReference, transfer)\r\n        {\r\n        }\r\n\r\n        public override void OnCreate()\r\n        {\r\n            base.OnCreate();\r\n            \r\n            // start Flurry\r\n            FlurryAgent.Init(this, \"FLURRY_API_KEY\");\r\n            \r\n            // continue . . .\r\n        }\r\n    }\r\n\r\n## Configure Ad Serving\r\n\r\nConfiguring ad serving is quick. After you [create an ad space][3], integrate \r\nthe Flurry ads (step 5) into your app. For additional help with creating an ad \r\nspace, check this [documentation][4]. \r\n\r\n[**Create an Ad Space**][3]\r\n\r\n## Integrate Flurry Ads\r\n\r\nNow, integrate the Ad Space code into your app and start earning revenue. \r\n\r\n### iOS \r\n\r\n    // create the ad instance\r\n    var adBanner = new FlurryAdBanner(\"AD_SPACE_NAME);\r\n    adBanner.DidFetchAd += delegate {\r\n        // display the ad\r\n        adBanner.DisplayAd(View, this);\r\n    };\r\n    \r\n    // fetch the ad\r\n    adBanner.FetchAd(View.Frame);   \r\n\r\n### Android\r\n\r\n    // create the ad instance\r\n    var adBanner = new FlurryAdBanner(this, bannerContainerView, \"AD_SPACE_NAME\");\r\n    adBanner.Fetched += delegate {\r\n        // display the ad\r\n        adBanner.DisplayAd();\r\n    };\r\n    \r\n    // fetch the ad\r\n    adBanner.FetchAd();\r\n\r\nBesides the basic banner ad, we can include other ad types, one such type is the \r\ninterstitial ad.\r\n\r\n### iOS\r\n\r\n    // create the ad instance\r\n    var adInterstitial = new FlurryAdInterstitial(\"AD_SPACE_NAME\");\r\n    adInterstitial.DidFetchAd += delegate {\r\n        // display the ad\r\n        adInterstitial.Present(this);\r\n    };\r\n    \r\n    // fetch the ad\r\n    adInterstitial.FetchAd();\r\n     \r\n### Android\r\n\r\n    // create the ad instance\r\n    var adInterstitial = new FlurryAdInterstitial(this, \"AD_SPACE_NAME\");\r\n    adInterstitial.Fetched += delegate {\r\n        // display the ad\r\n        adInterstitial.DisplayAd();\r\n    };\r\n    \r\n    // fetch the ad\r\n    adInterstitial.FetchAd();\r\n            \r\n[1]: https://dev.flurry.com/secure/signup.do\r\n[2]: https://dev.flurry.com/createProjectSelectPlatform.do\r\n[3]: https://dev.flurry.com/appSpotSignup.do\r\n[4]: https://developer.yahoo.com/flurry/docs/publisher/gettingstarted/basicadspacesetup/\r\n","Hash":"eb0e77aaa097b927fffc19d29ffa035e","TargetPlatforms":["ios","android"],"TrialHash":null}